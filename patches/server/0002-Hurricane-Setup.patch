From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Encode42 <me@encode42.dev>
Date: Thu, 16 Sep 2021 20:39:45 -0400
Subject: [PATCH] Setup


diff --git a/build.gradle.kts b/build.gradle.kts
index 50112767dff03bc3d9b3cc527e20f1b0d8df7155..9d58de3b90ae5fff8b5fa24b98327ff7013bdafe 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,7 +9,7 @@ plugins {
 }
 
 dependencies {
-    implementation(project(":purpur-api")) // Pufferfish // Paper // Purpur
+    implementation(project(":hurricane-api")) // Pufferfish // Paper // Purpur // Hurricane
     // Pufferfish start
     implementation("io.papermc.paper:paper-mojangapi:1.18.2-R0.1-SNAPSHOT") {
         exclude("io.papermc.paper", "paper-api")
@@ -82,7 +82,7 @@ tasks.jar {
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
             "Implementation-Title" to "CraftBukkit",
-            "Implementation-Version" to "git-Purpur-$implementationVersion", // Pufferfish // Purpur
+            "Implementation-Version" to "git-Hurricane-$implementationVersion", // Pufferfish // Purpur // Hurricane
             "Implementation-Vendor" to date, // Paper
             "Specification-Title" to "Bukkit",
             "Specification-Version" to project.version,
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 99597258e8e88cd9e2c901c4ac3ff7faeeabee2b..5e8569c0661d6cb38e8dafe47b812c7ba834dc0e 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/org.purpurmc.purpur/purpur-api/pom.properties"); // Pufferfish // Purpur
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/com.notsatvrn.hurricane/hurricane-api/pom.properties"); // Pufferfish // Purpur // Hurricane
         Properties properties = new Properties();
 
         if (stream != null) {
diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index c5b18b8d4ad74764fdeb5a1e21231e212e808b99..eeec56f56509d8cb98feb2dfa9819efba19c19bf 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -235,7 +235,7 @@ public class PurpurConfig {
         if (!TimingsManager.hiddenConfigs.contains("settings.seed")) TimingsManager.hiddenConfigs.add("settings.seed");
     }
 
-    public static String serverModName = "Purpur";
+    public static String serverModName = "Hurricane"; // Hurricane
     private static void serverModName() {
         serverModName = getString("settings.server-mod-name", serverModName);
     }


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index bdabc6ec495ca56848ad7b8cc7aef7e5788c7efa..36503b8a1c4170d4c0845fd7ec78eb9cc883bff1 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -249,7 +249,7 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper

 public final class CraftServer implements Server {
-    private final String serverName = "Purpur"; // Paper // Pufferfish // Purpur
+    private final String serverName = "Hurricane"; // Paper // Pufferfish // Purpur // Hurricane
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
@@ -957,6 +957,7 @@ public final class CraftServer implements Server {
         org.spigotmc.SpigotConfig.init((File) console.options.valueOf("spigot-settings")); // Spigot
         com.destroystokyo.paper.PaperConfig.init((File) console.options.valueOf("paper-settings")); // Paper
         org.purpurmc.purpur.PurpurConfig.init((File) console.options.valueOf("purpur-settings")); // Purpur
+        com.notsatvrn.hurricane.config.HurricaneConfig.init((File) console.options.valueOf("hurricane-settings")); // Hurricane
         for (ServerLevel world : this.console.getAllLevels()) {
             // world.serverLevelData.setDifficulty(config.difficulty); // Paper - per level difficulty
             world.setSpawnSettings(world.serverLevelData.getDifficulty() != Difficulty.PEACEFUL && config.spawnMonsters, config.spawnAnimals); // Paper - per level difficulty (from MinecraftServer#setDifficulty(ServerLevel, Difficulty, boolean))
@@ -974,6 +975,7 @@ public final class CraftServer implements Server {
             world.spigotConfig.init(); // Spigot
             world.paperConfig.init(); // Paper
             world.purpurConfig.init(); // Purpur
+            world.hurricaneConfig.init(); // Hurricane
         }

         Plugin[] pluginClone = pluginManager.getPlugins().clone(); // Paper
@@ -2748,6 +2750,13 @@ public final class CraftServer implements Server {
         }
         // Purpur end

+        // Hurricane
+        @Override
+        public YamlConfiguration getHurricaneConfig() {
+            return com.notsatvrn.hurricane.config.HurricaneConfig.config;
+        }
+        // Hurricane end
+
         @Override
         public void restart() {
             org.spigotmc.RestartCommand.restart();
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 20f016e24b679af2651dc84819b1c62d2937b77b..76267a2a319b4fdf17784d9918d5f9addf8437f4 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -240,6 +240,15 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         }
         org.purpurmc.purpur.PurpurConfig.registerCommands();
         // Purpur end
+        // Hurricane start
+        try {
+            com.notsatvrn.hurricane.config.HurricaneConfig.init((java.io.File) options.valueOf("hurricane-settings"));
+        } catch (Exception e) {
+            DedicatedServer.LOGGER.error("Unable to load server configuration", e);
+            return false;
+        }
+        com.notsatvrn.hurricane.config.HurricaneConfig.registerCommands();
+        // Hurricane end
         com.destroystokyo.paper.VersionHistoryManager.INSTANCE.getClass(); // load version history now
         io.papermc.paper.util.ObfHelper.INSTANCE.getClass(); // load mappings for stacktrace deobf and etc.
         io.papermc.paper.brigadier.PaperBrigadierProviderImpl.INSTANCE.getClass(); // init PaperBrigadierProvider
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 40e01ed99a129a6a14f9c5cc29f046bd23d198cb..0216562a6bfacb006cf7a0482bbb6588a6645a9f 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -166,6 +166,8 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
 
     public final org.purpurmc.purpur.PurpurWorldConfig purpurConfig; // Purpur
 
+    public final com.notsatvrn.hurricane.config.HurricaneWorldConfig hurricaneConfig; // Hurricane
+
     public final co.aikar.timings.WorldTimingsHandler timings; // Paper
     public static BlockPos lastPhysicsProblem; // Spigot
     private org.spigotmc.TickLimiter entityLimiter;
@@ -319,6 +321,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
         this.spigotConfig = new org.spigotmc.SpigotWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) worlddatamutable).getLevelName()); // Spigot
         this.paperConfig = new com.destroystokyo.paper.PaperWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) worlddatamutable).getLevelName(), this.spigotConfig); // Paper
         this.purpurConfig = new org.purpurmc.purpur.PurpurWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) worlddatamutable).getLevelName(), env); // Purpur
+        this.hurricaneConfig = new com.notsatvrn.hurricane.config.HurricaneWorldConfig(((net.minecraft.world.level.storage.PrimaryLevelData) worlddatamutable).getLevelName()); // Hurricane
         this.playerBreedingCooldowns = this.getNewBreedingCooldownCache(); // Purpur
         this.generator = gen;
         this.world = new CraftWorld((ServerLevel) this, gen, biomeProvider, env);
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 639dc3bb56cc90b84da08dc93cea89c658ed6dc8..a03e3c705c6bf8825095db41697a6830f2abe932 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -161,6 +161,14 @@ public class Main {
                     .describedAs("Yml file");
                 // Purpur end

+                // Hurricane Start
+                acceptsAll(asList("hurricane", "hurricane-settings"), "File for hurricane settings")
+                        .withRequiredArg()
+                        .ofType(File.class)
+                        .defaultsTo(new File("hurricane.yml"))
+                        .describedAs("Yml file");
+                // Hurricane End
+
                 // Paper start
                 acceptsAll(asList("server-name"), "Name of the server")
                         .withRequiredArg()


diff --git a/build.gradle.kts b/build.gradle.kts
index bd408251600ef9fce67f4239d1da93a6545c3ea1..1d34b4cdbb8c293539326ec8f3e49e19ed77db01 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -56,6 +56,15 @@ dependencies {
     // Pufferfish end
     implementation("com.github.technove:Flare:34637f3f87") // Pufferfish - flare

+    // Hurricane Start
+    implementation("it.unimi.dsi:fastutil:8.5.8")
+
+    implementation("org.jocl:jocl:2.0.4")
+
+    compileOnly("org.projectlombok:lombok:1.18.24")
+    annotationProcessor("org.projectlombok:lombok:1.18.24")
+    // Hurricane End
+
     testImplementation("io.github.classgraph:classgraph:4.8.47") // Paper - mob goal test
     testImplementation("junit:junit:4.13.2")
     testImplementation("org.hamcrest:hamcrest-library:1.3")


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 20cdc0eb26fd53a4193b39171982dfa255d355bf..6665112e7ca01309dbfdfc7ede84a42d21e87f90 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -410,6 +410,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         */
         // Paper end
         Runtime.getRuntime().addShutdownHook(new org.bukkit.craftbukkit.util.ServerShutdownThread(this));
+        com.notsatvrn.hurricane.util.EntryPoint.start(); // Hurricane
     }
     // CraftBukkit end

